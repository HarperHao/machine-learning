A岸上，有谷子、鸡、狼，农夫必须将他们都送到B岸，每次只能送1个，农夫不在岸上的时候，鸡会吃谷子、狼会吃鸡， 在保证他们都不会被吃的前提下，完成任务
A = [["狼", 1], ["鸡", 1], ["谷子", 1]]
B = [["狼", 0], ["鸡", 0], ["谷子", 0]]
size = len(A)
number = -1

def judge(A):
   if A[1][1] == 1 and A[0][1] + A[2][1] == 1:
       return False
   else:
       return True
def A_to_B():
   global number
   for i in range(size):
       if A[i][1] == 1 and i != number:
           A[i][1] -= 1
           if judge(A):
               B[i][1] += 1
               number = i
               print("%s ,A―>B" % A[i][0])
               break
           else:
               A[i][1] += 1
               continue
       else:
           continue

def B_to_A():
   global number
   if judge(B) == False:
       for j in range(size):
           if B[j][1] == 1 and j != number:
               B[j][1] -= 1
               A[j][1] += 1
               number = j
               print("%s ,B―>A" % B[j][0])
               break
   else:
       if B[0][1] + B[1][1] + B[2][1] == 3:
           print("任务完成")
       else:
           print("B->A")
def shore(A):
   list1 = []
   list2 = []
   for i in range(size):
       if A[i][1] == 1:
           list1.append(A[i][0])
   return list1


def sucess():
   if B[0][1] + B[1][1] + B[2][1] == 3:
       return True
   else:
       return False


while 1:
   print("A岸上有", shore(A))
   print("B岸上有", shore(B))
   A_to_B()
   print("A岸上有", shore(A))
   print("B岸上有", shore(B))
   B_to_A()
   if sucess():
       break