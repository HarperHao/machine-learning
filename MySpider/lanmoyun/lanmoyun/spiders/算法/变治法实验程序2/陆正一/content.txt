import numpy as np
def LU(A):
   L = np.eye(len(A))
   U = np.zeros(np.shape(A))
   for r in range(1, len(A)):
       U[0, r - 1] = A[0, r - 1]
       L[r, 0] = A[r, 0] / A[0, 0]
   U[0, -1] = A[0, -1]
   for r in range(1, len(A)):
       for i in range(r, len(A)):
           delta = 0
           for k in range(0, r):
               delta += L[r, k] * U[k, i]
           U[r, i] = A[r, i] - delta

           for i in range(r + 1, len(A)):
               theta = 0
               for k in range(0, r):
                   theta += L[i, k] * U[k, r]
               L[i, r] = (A[i, r] - theta) / U[r, r]
   return L, U
A = np.array([[1, 1, -1], [1, 2, -2.], [-2, 1, 1]])
L, U = LU(A)
print(L, U)