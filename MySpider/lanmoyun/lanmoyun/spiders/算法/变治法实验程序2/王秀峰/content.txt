LU分解矩阵求逆
import numpy as np
def LU_decomposition(A):
   n = len(A[0])
   L = np.zeros([n, n])
   U = np.zeros([n, n])
   for i in range(n):
       L[i][i] = 1
       if i == 0:
           U[0][0] = A[0][0]
           for j in range(1, n):
               U[0][j] = A[0][j]
               L[j][0] = A[j][0] / U[0][0]
       else:
           for j in range(i, n):  # U
               temp = 0
               for k in range(0, i):
                   temp = temp + L[i][k] * U[k][j]
               U[i][j] = A[i][j] - temp
           for j in range(i + 1, n):  # L
               temp = 0
               for k in range(0, i):
                   temp = temp + L[j][k] * U[k][i]
               L[j][i] = (A[j][i] - temp) / U[i][i]
   return L, U

def Linv(L):

   m = len(L[0])
   Linv = np.zeros([m, m])
   for j in range(0,m):
       for i in range(j,m):
           if i == j:
               Linv[i][j] = 1/L[i][j]
           elif i < j:
               Linv[i][j] = 0
           else:
               temp = 0
               for k in range(j,i):
                   temp = L[i][k] * Linv[k][j] + temp
               Linv[i][j] = -Linv[j][j] * temp
   return Linv
def Uinv(U):
   m = len(U[0])
   Uinv = np.zeros([m, m])
   for j in range(0,m):
       for i in range(j,-1,-1):
           if i == j:
               Uinv[i][j] = 1/U[i][j]
           elif i > j:
               Uinv[i][j] = 0
           else:
               temp = 0
               for k in range(i + 1,j + 1):
                   temp = U[i][k] * Uinv[k][j] + temp
               Uinv[i][j] = -1/U[i][i] * temp
   return Uinv

def Mult(L,U):
   m = len(L[0])
   ans = np.zeros([m, m])
   for i in range(0,m):
       for j in range(0,m):
           for k in range(0,m):
               ans[i][j] = ans[i][j] + U[i][k] * L[k][j]
   return ans

if __name__ == '__main__':
   A = [[4,2,1,5],[8,7,2,10],[4,8,3,6],[6,8,4,9]]
   L, U = LU_decomposition(A)
   Linv = Linv(L)
   Uinv = Uinv(U)
   ans = Mult(Linv,Uinv)
   print("L矩阵为:",'\n',L, '\n',"U矩阵为:",'\n', U)
   print()
   # print(Linv, '\n', Uinv)
   print()
   print("矩阵求逆为：",'\n',ans)