#include <stdio.h>
#include <stdlib.h>
#define N 10
int IsFuShu(int a[], int n){
   int i = 0;
   for(i = 0; i < n; i++){
       if(a[i] > 0)
           break;
   }
   if(i == n)
       return -1;
   else
       return 0;
}
void maxSum3(int a[], int n){
   int b[n];
   int i, j, s = n - 1;
   int maxSum = 0;
   b[0] = a[0];
   for(i = 1; i < n; i++){
       if(b[i - 1] > 0)
           b[i] = b[i - 1] + a[i];
       else{
           b[i] = a[i];
       }
   }
   for(j = 0; j < n; j++){
       if(b[j] > maxSum){
           s = j;
           maxSum = b[j];
       }
   }
   printf("\n动态规划法求出最大子段和为：%d", maxSum);
   for(i = s-1; i >= 0; i--){
       if(b[i] <= 0)
           break;
   }
   printf("\n\n打印最大子段：\n");
   for(i = i + 1; i <= s; i++){
       printf("%d  ", a[i]);
   }
}
void Print(int a[], int n){
   printf("打印数组:\n");
   int i;
   for(i = 0; i < n; i++){
       printf("%d   ", a[i]);
   }
}
void Creat(int a[]){
   int i,m;
   printf("输入数组的值：");
   for(i = 0; i < N; i++){
       scanf("%d", &m);
       a[i] = m;
   }
}
int main()
{
   int a[N];
   Creat(a);
   Print(a, N);
   int sum = IsFuShu(a, N);
   if(sum == -1)
       printf("最大子段和是0");
   else{
        maxSum3(a, N);
   }
   return 0;
}