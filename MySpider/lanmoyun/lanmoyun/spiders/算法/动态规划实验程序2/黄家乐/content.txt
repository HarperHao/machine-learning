实验源代码
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 100
void LCS(char *x, char *y,int x_len, int y_len, int common_len[][MAX], int b[][MAX])
{
   int i,j;  
   for (i = 0; i < x_len; i++)
       common_len[i][0] = 0;
   for (j = 0; j < y_len; j++)
       common_len[0][j] =0;
   for (i = 1; i <= x_len; i++)
   {
       for (j = 1; j <= y_len; j++)
       {
           if (x[i-1] == y[j-1])
           {
               common_len[i][j] = common_len[i-1][j-1] + 1;
               b[i][j] = 0;
           }
           else if (common_len[i-1][j] >= common_len[i][j-1])
           {
               common_len[i][j] = common_len[i-1][j];
               b[i][j] = -1;
           }
           else
           {
               common_len[i][j] = common_len[i][j-1];
               b[i][j] = 1;
           }
       }
   }
}
void backtrack(int i, int j,int b[][MAX], char *x)
{
   if (0 == i || 0 == j)
       return;
   else if (0 == b[i][j])
   {
       backtrack(i-1,j-1,b,x);
       printf("%c",x[i-1]);
   }
   else if(-1 == b[i][j])
   {
       backtrack(i-1,j,b,x);
   }
   else
   {
       backtrack(i,j-1,b,x);
   }
}
int main()
{
   char x[MAX] = "ADCBADC";
   char y[MAX] = "DACD";
   int len[MAX][MAX];
   int b[MAX][MAX];
   int len1 = strlen(x);
   int len2 = strlen(y);
   LCS(x,y,len1,len2,len,b);
   backtrack(len1,len2,b,x);    
   printf("\n");    
   return 0;
}