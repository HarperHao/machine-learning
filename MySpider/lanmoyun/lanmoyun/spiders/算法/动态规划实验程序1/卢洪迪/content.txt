import numpy as np
#行李数n，不超过的重量W，重量列表h和价值列表l
def fun(n,W,h,l):
a=np.array([[0]*(W+1)]*(n+1))
#依次计算前i个行李的最大价值，n+1在n的基础上进行
for i in range(1,n+1):
for j in range(1,W+1):
if h[i-1]>j:
a[i,j]=a[i-1,j]
else:
a[i,j]=max(a[i-1,j],l[i-1]+a[i-1,j-h[i-1]])#2种情况取最大值
print('价值最大化为：'+str(a[n,W]))
findDetail(l,n,a[n,W])
#找到价值列表中的一个子集，使得其和等于前面求出的最大价值，即为选择方案
def findDetail(l,n,v):
a=np.array([[True]*(v+1)]*(n+1))
for i in range(0,n+1):
a[i][0]=True
for i in range(1,v+1):
a[0][i]=False
for i in range(1,n+1):
for j in range(1,v+1):
if l[i-1]>j:
a[i,j]=a[i-1,j]
else:
a[i,j]=a[i-1,j] or a[i-1,j-l[i-1]]
if a[n,v]:
i=n
result=[]
while i>=0:
if a[i,v] and not a[i-1,v]:
result.append(l[i-1])
v-=l[i-1]
if v==0:
break
i-=1
print(result)
else:
print('error')
weights=[1,3,5,7,9,11]
price=[11,13,15,17,19,21]
fun(len(weights),13,weights,price)