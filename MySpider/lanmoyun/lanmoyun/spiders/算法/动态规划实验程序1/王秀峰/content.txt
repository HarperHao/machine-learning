实验名称
动态规划法的应用
实验目的
掌握动态规划法求解具体问题的一般步骤，具备运用动态规划法思想编程实现矩阵连乘、0-1背包、最大子段和等问题的能力。
实验题目
  0-1背包
实验源代码
def bag(n,c,w,v):
   value = [[0 for j in range(c + 1)]for i in range(n + 1)]
   for i in range(1,n + 1):
       for j in range(1,c + 1):
           value[i][j] = value[i - 1][j]
           if j >= w[i - 1] and value[i][j] < value[i - 1][j - w[i - 1]] + v[i-1]:
               value[i][j] = value[i - 1][j - w[i-1]] + v[i - 1]
   for x in value:
       print(x)
   return value
def show(n,c,w,value):
   print('最大价值为:',value[n][c])
   x = [False for i in range(n)]
   j = c
   for i in range(n,0,-1):
       if value[i][j] > value[i - 1][j]:
           x[i - 1] = True
           j -= w[i - 1]
   print('背包中所装的物品为:')
   for i in range(n):
       if x[i]:
           print('第',i + 1,'个物品',end=' ')

if __name__ == "__main__":
   n = 6 #物品数量
   c = 10#书包能承受的重量
   w = [2,3,1,2,2,5]#每个物品的重量
   v = [2,1,5,3,3,4]#每个物品的价值
   value = bag(n,c,w,v)
   show(n,c,w,value)

实验结果（给出题目的运行结果（插入运行结果截图））
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[0, 0, 2, 2, 2, 3, 3, 3, 3, 3, 3]
[0, 5, 5, 7, 7, 7, 8, 8, 8, 8, 8]
[0, 5, 5, 8, 8, 10, 10, 10, 11, 11, 11]
[0, 5, 5, 8, 8, 11, 11, 13, 13, 13, 14]
[0, 5, 5, 8, 8, 11, 11, 13, 13, 13, 15]
最大价值为: 15
背包中所装的物品为:
第 3 个物品 第 4 个物品 第 5 个物品 第 6 个物品