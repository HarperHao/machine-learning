def dij(g,a): #源点a
   if a in range(len(g))   :
       d=[0 for _ in range(len(g))]
       p=[-1 for _ in range(len(g))]
       way=[]
       start=a
       s=[]
       s.append(start)
       #sorted(start, key=lambda x: x[1])
       for i in range(1,len(g)) :
           way.append(start)
           st=start
           for j in range(1,len(g)) :
               b=0
               for _ in g[start] :
                   if j==_[0] and j not in s and _[0] not in s:
                       b=_
                       break
               if b!=0:
                   d[j]=b[1]+d[start]
                   p[j]=start

           m=0
           for k in range(1, len((g))):
               if k not in s and d[k] != -1 and d[k] != 0:
                   m=k
           for k in range(1,len((g))):
               if k not in s and d[k]!=0 and d[k] < d[m] :
                   m=k
                   start=k
           if start==st :
               return way,d

   else :
       return None

def main():
   g=[[1,2,3],[2,3,5],[3,4,8],[1,3,9],[1,4,10]]#点，点，边长
   gr = [[] for _ in range(5)]#邻接表
   for i in g:
       gr[i[0]].append([i[1], i[2]])
       gr[i[1]].append([i[0], i[2]])
   for i in gr:
       print(i)
   w,d=dij(gr,1)
   print(w)
   print(d)
if __name__=='__main__':
   main()