import numpy as np
def LCS_LENGTH(X, Y):
   m = len(X) # X的长度
   n = len(Y) # Y的长度

   b = np.array([[None]*(n+1)]*(m+1)) # 表示方向
   c = np.array([[0]*(n+1)]*(m+1))  # 求解方法

   # use DP to sole LCS problem
   for i in range(1, m+1):
       for j in range(1, n+1):
           if X[i-1] == Y[j-1]:
               c[i,j] = c[i-1,j-1]+1
               b[i,j] = 'diag'
           elif c[i-1,j] >= c[i, j-1]:
               c[i,j] = c[i-1,j]
               b[i,j] = 'up'
           else:
               c[i,j] = c[i,j-1]
               b[i,j] = 'left'
   return b,c

# 打印最长公共子序列
def print_LCS(b, X, i, j):

   if i == 0 or j == 0:
       return None
   if b[i,j] == 'diag':
       print_LCS(b, X, i-1, j-1)
       print(X[i-1], end=' ')
   elif b[i,j] == 'up':
       print_LCS(b, X, i-1, j)
   else:
       print_LCS(b, X, i, j-1)

X = 'BDCAB'
Y = 'ABCBD'

b,c = LCS_LENGTH(X,Y)
print_LCS(b, X, len(X), len(Y))