01背包问题
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int tableTwo[10][100];
int flag[10] = { -1 };

int abc(vector<int> v, vector<int> w, int c, int n) {
int jMax = min(w[n] - 1, c);
for (int j = 0; j<jMax; j++)tableTwo[n][j] = 0;
for (int j = w[n]; j <= c; j++)tableTwo[n][j] = v[n];
for (int i = n - 1; i>1; i--) {
jMax = min(w[i], c);
for (int j = 0; j <= jMax; j++)tableTwo[i][j] = tableTwo[i + 1][j];
for (int j = w[i]; j <= c; j++)tableTwo[i][j] = max(tableTwo[i + 1][j], tableTwo[i + 1][j - w[i]] + v[i]);
}
tableTwo[1][c] = tableTwo[2][c];
if (c >= w[1])tableTwo[1][c] = max(tableTwo[1][c], tableTwo[2][c - w[1]] + v[1]);
return tableTwo[1][c];
}


void back(vector<int> w, int c, int n) {
for (int i = 1; i<n; i++) {
if (tableTwo[i][c] == tableTwo[i + 1][c])flag[i] = 0;
else {
flag[i] = 1;
c -= w[i];
}
}
flag[n] = tableTwo[n][c] ? 1 : 0;
}

int main()
{
int num;
int sum;
cout << "请输入背包的个数和背包的最大重量：\n";
cin >> num >> sum;
vector<int> weight;
vector<int> price;

cout << "请依次输入物品的重量：";
weight.push_back(0);
price.push_back(0);
for (int i = 0; i < num; i++)
{
int tmp1;
cin >> tmp1;
weight.push_back(tmp1);
}
cout << endl;

cout << "请依次输入物品的价格：";
for (int i = 0; i < num; i++)
{
int tmp2;
cin >> tmp2;
price.push_back(tmp2);
}
cout << endl;

cout << "总价值最大为：" <<abc(price, weight, sum, num) << endl;
back(weight, sum, num);
cout << "最优值的解：";
for (int i = 1; i<num + 1; i++)cout << flag[i] << " ";
cout << endl;

system("pause");  
return 0;
}