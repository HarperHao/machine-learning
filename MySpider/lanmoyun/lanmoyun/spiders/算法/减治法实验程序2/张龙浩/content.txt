#减治法实现折半插入排序
def find(low,high,list,boolean):
   j = high
   value = list[high+1]
   while low <= high:
       mid = (low + high) // 2
       if boolean==True:
           if list[mid] < value:
               low = mid + 1
           else:
               high = mid - 1
       else:
           if list[mid] > value:
               low = mid + 1
           else:
               high = mid - 1
   temp = list[j+1]
   while j > high:
       list[j + 1] = list[j]
       j -= 1
   list[high + 1] = temp
   return list

def binInsert_sort(list,boolean=True):   #True从小到大，False从大到大小
  length = len(list)
  i=1
  while i<length:
      if boolean==True:
          if list[i]<list[i-1]:
              list=find(0,i-1,list,boolean)
      else:
          if list[i]>list[i-1]:
              list=find(0,i-1,list,boolean)
      i+=1
  return list

L=[3,4,6,9,8,6,0,2]
print("原数组：",L)
L=binInsert_sort(L,False)
print("排序后数组：",L)