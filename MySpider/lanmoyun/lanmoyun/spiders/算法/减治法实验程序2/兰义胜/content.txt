import numpy as np


def lu(A):
   n = len(A[0])
   L = np.eye(n, n)
   U = np.zeros([n, n])
   for i in range(n):
       if i == 0:
           U[0][0] = A[0][0]
           for j in range(1, n):
               U[0][j] = A[0][j]
               L[j][0] = A[j][0] / U[0][0]
       else:
           for j in range(i, n):
               temp = 0
               for k in range(0, i):
                   temp = temp + L[i][k] * U[k][j]
               U[i][j] = A[i][j] - temp
           for j in range(i + 1, n):
               temp = 0
               for k in range(0, i):
                   temp = temp + L[j][k] * U[k][i]
               L[j][i] = (A[j][i] - temp) / U[i][i]
   return L, U


A = [[2, -1, 1], [4, 1, -1], [1, 1, 1]]
L, U = lu(A)
print("L U ¾ØÕó£º")
print(L, '\n\n', U)

n = len(A[0])
ru = np.zeros([n, n])
rl = np.zeros([n, n])
rev = np.zeros([n, n])
for i in range(n):
   ru[i][i] = 1 / U[i][i]
   for k in range(i-1, -1, -1):
       s = 0
       for j in range(k + 1, i + 1):
           s = s + U[k][j] * ru[j][i]
       ru[k][i] = (-s) / U[k][k]
for i in range(n):
   rl[i][i] = 1
   for k in range(i + 1, n):
       for j in range(i, k):
           rl[k][i] = rl[k][i] - L[k][j] * rl[j][i]
for i in range(n):
   for j in range(n):
       for k in range(n):
           rev[i][j] += ru[i][k] * rl[k][j]

print("Äæ¾ØÕó£º", rev)