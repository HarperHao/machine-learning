LUæÿ’Û∑÷Ω‚£∫
#include<iostream>
#include<algorithm>
using namespace std;

double L[4][4];
double U[4][4];
double invL[4][4];
double invU[4][4];
double invA[4][4];

void input(double V[][4]) {
for (int i = 0; i < 4; i++) {
for (int j = 0; j < 4; j++){
if (V[i][j] >= -100 && V[i][j] <= 100)
printf("%.2lf\t", V[i][j]);
else
cout << 0 << "\t";
}

cout << endl;
}
}

void set(double V[][4]) {
for (int i = 0; i < 4; i++)
for (int j = 0; j < 4; j++)
V[i][j] = 0.0;
}

int main() {
double A[4][4] = { { 4, 2, 1, 5 }, { 8, 7, 2, 10 }, { 4, 8, 3, 6 }, { 6, 8, 4, 9 } };
set(L);
set(U);
set(invL);
set(invU);
set(invA);
int n = 4;
double s = 0.0;
for (int i = 0; i < n; i++) {
L[i][i] = 1.0;
}
for (int i = 0; i < n; i++) {
U[0][i] = A[0][i];
}
for (int i = 1; i < n; i++) {
L[i][0] = A[i][0] / U[0][0];
}
for (int k = 1; k < n; k++) {
for (int j = k; j < n; j++) {
s = 0.0;
for (int t = 0; t < k; t++) {
s += L[k][t] * U[t][j];
}
U[k][j] = A[k][j] - s;
}
for (int i = k; i < n; i++) {
s = 0.0;
for (int t = 0; t < k; t++) {
s += L[i][t] * U[t][k];
}
L[i][k] = (A[i][k] - s) / U[k][k];
}
}
for (int j = 0; j < n; j++) {
for (int i = j; i < n; i++) {
if (i == j) invL[i][j] = 1 / L[i][j];
else if (i < j) invL[i][j] = 0;
else {
double s = 0.0;
for (int k = j; k < i; k++) {
s += L[i][k] * invL[k][j];
}
invL[i][j] = -invL[j][j] * s;
}
}
}

for (int j = 0; j < n; j++) {
for (int i = j; i >= 0; i--) {
if (i == j) invU[i][j] = 1 / U[i][j];
else if (i > j)
invU[i][j] = 0;
else {
s = 0.0;
for (int k = i + 1; k <= j; k++) {
s += U[i][k] * invU[k][j];
}
invU[i][j] = -1 / U[i][i] * s;
}
}
}

for (int i = 0; i < n; i++) {
for (int j = 0; j < n; j++) {
for (int k = 0; k < n; k++) {
invA[i][j] += invU[i][k] * invL[k][j];
}
}
}
input(A);
cout << "Læÿ’Û£∫"<< endl;
input(L);
cout << "Uæÿ’Û£∫" << endl;
input(U);
cout << "LµƒƒÊæÿ’Û£∫" << endl;
input(invL);
cout << "UµƒƒÊæÿ’Û£∫" << endl;
input(invU);
cout << "AµƒƒÊæÿ’Û£∫" << endl;
input(invA);
return 0;
}