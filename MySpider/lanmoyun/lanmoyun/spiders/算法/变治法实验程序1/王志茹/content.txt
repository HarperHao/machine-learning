LU矩阵分解求逆矩阵
L矩阵为下三角矩阵，U为上三角矩阵，A的逆矩阵为L的逆矩阵乘U的逆矩阵；L的主对角线元素都为1，U矩阵的第一行元素与A相同，利用循环将A化为上三角矩阵，先求出除第一行外，剩余行A[1…n-1][0]与A[0][0]的倍数关系，再相减，使下面第一列元素变为0，然后再循环，找A[2…n-1][1]与A[1][1]的倍数关系，相减使下方变为0，通过循环，变成上三角矩阵U，U的反过程为L的过程，循环形成下三角矩阵L，再通过循环求得LU逆矩阵，LU的逆矩阵仍为三角矩阵，相乘得到A的逆矩阵
import java.util.Scanner;
public class Test {

public static void main(String[] args) {
System.out.println("输入行数与列数：");
Scanner in = new Scanner(System.in);
int num=in.nextInt();
System.out.println("输入矩阵A：");
double[][] A=new double[10][10];
for(int i=0;i<num;i++) {
 for(int j=0;j<num;j++) {
 A[i][j]=in.nextDouble();
 }
 }
System.out.println("A矩阵为");
 print(num,A);
 lu(num,A);
}
 public static void print(int n,double[][] m) {
 for(int i=0;i<n;i++) {
 for(int j=0;j<n;j++) {
 System.out.printf("%8.2f",m[i][j]);
 }
 System.out.println();
 }
 }
 public static void lu(int n,double[][] m) {
 double[][] l=new double[n][n];
 double[][] u=new double[n][n];
 double[][] L=new double[n][n];
 double[][] U=new double[n][n];
 for(int i=0;i<n;i++) {
 L[i][i]=1.0;
 }
 for(int j=0;j<n;j++) {
 U[0][j]=m[0][j];
 }
 for(int i=1;i<n;i++) {
 L[i][0]=m[i][0]/U[0][0];
 }
 for(int k=1;k<n;k++) {
 for(int j=k;j<n;j++) {
 double s=0.0;
 for(int t=0;t<k;t++) {
 s=s+L[k][t]*U[t][j];
 }
 U[k][j]=m[k][j]-s;
 }
 for(int i=k;i<n;i++) {
 double s=0.0;
 for(int t=0;t<k;t++) {
 s=s+L[i][t]*U[t][k];
 }
 L[i][k]=(m[i][k]-s)/U[k][k];
 }
 }
 for(int j=0;j<n;j++) {
 for(int i=j;i<n;i++) {
 if(i==j) l[i][j]=1/L[i][j];
 else if(i<j) l[i][j]=0;
 else {
 double s=0.0;
 for(int k=j;k<i;k++) {
 s=s+L[i][k]*l[k][j];
 }
 l[i][j]=-l[j][j]*s;
 }
 }
 }
 for(int j=0;j<n;j++) {
 for(int i=j;i>=0;i--) {
 if(i==j) u[i][j]=1/U[i][j];
 else if(i>j) u[i][j]=0;
 else {
 double s=0.0;
 for(int k=i+1;k<=j;k++) {
 s=s+U[i][k]*u[k][j];
 }
 u[i][j]=-1/U[i][i]*s;
 }
 }
 }
 double[][] a=new double[n][n];
 for(int i=0;i<n;i++) {
 for(int j=0;j<n;j++) {
 for(int k=0;k<n;k++) {
 a[i][j]+=u[i][k]*l[k][j];
 }
 }
 }
 System.out.println("U矩阵为");
 print(n,U);
 System.out.println("L矩阵为");
 print(n,L);
 System.out.println("U的逆矩阵为");
 print(n,u);
 System.out.println("L的逆矩阵为");
 print(n,l);
 System.out.println("A的逆矩阵为");
 print(n,a);
 }
}